Name: pcbr-validation
Processes: 1
Steps:
    network:
        Extension: gml
        Parameters:
            nnode: 5000
            mean_degree: 8
            seed: !!python/object/apply:__builtin__.xrange [0, 10, 1]
            num_clusters: [2, 10, 20]
            cluster_size: [5, 10, 50, 100]
            cluster_rate: 4
            connect: "TRUE"
        Interpreter: R --vanilla --silent
        Startup: |
            suppressPackageStartupMessages(library(netabc))
            suppressPackageStartupMessages(library(igraph))
        Rule: |
            set.seed({seed})
            g <- barabasi.game({nnode}, m={mean_degree}/2, directed=F)
            graph_attr(g, "comment") <- "{yaml}"
            g <- add.transmission.clusters(g, {cluster_size}, {num_clusters}, {cluster_rate}, {connect})
            write.graph(SI.net(g), "{network}", format="gml")

    tree:
        Extension: nwk
        Parameters:
            nnode: 5000
            mean_degree: 8
            seed: !!python/object/apply:__builtin__.xrange [0, 10, 1]
            num_clusters: [2, 10, 20]
            cluster_size: [5, 10, 50, 100]
            cluster_rate: 4
            connect: "TRUE"
            nsimnode: 1000
            tree_tips: 200
        Depends: network
        Interpreter: bash
        Rule: |
            echo "#{yaml}" > {tree}
            nettree --sim-nodes {nsimnode} --tree-tips {tree_tips} --seed {seed} {network} >> {tree}

    cluster-plot:
        Extension: pdf
        Parameters:
            nnode: 5000
            mean_degree: 8
            seed: 0
            num_clusters: [2, 10, 20]
            cluster_size: [5, 10, 50, 100]
            cluster_rate: 4
            connect: "TRUE"
            nsimnode: 1000
            tree_tips: 200
        Depends: tree network
        Interpreter: R --vanilla --silent
        Rule: |
            library(netabc)
            net <- read.graph("{network}", "gml")
            tree <- read.tree("{tree}")
            pdf("{cluster-plot}")
            par(mar=c(0, 0, 4, 0) + 0.1)
            cluster.plot(net, tree, yaml="{yaml}", direction="down", show.tip.label=FALSE)
